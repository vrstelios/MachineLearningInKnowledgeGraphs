# -*- coding: utf-8 -*-
""".ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ar61yqOCahzcGA-NILzE4m9X36u_Ys00

# MachineLearningInKnowledgeGraphs
"""

from google.colab import drive
# 1. Σύνδεση με το Google Drive
drive.mount('/content/drive')

#!ls -l "/content/drive/MyDrive/Homo_sapiens.owl"
#!head -c 1000 "/content/drive/MyDrive/Homo_sapiens.owl"

# 2. Εγκατάσταση απαραίτητων πακέτων
!apt-get install openjdk-11-jdk-headless -qq > /dev/null
!pip install --upgrade class-resolver==0.4.0 mowl-borg gensim==4.3.0

#print("verros")
#!pip freeze
#!pip check

# 3. Αρχικοποίηση JVM
import mowl
mowl.init_jvm("20g")

# 4. Φόρτωση ontology
from mowl.datasets import PathDataset
owl_path = "/content/drive/MyDrive/Homo_sapiens.owl"
dataset = PathDataset(owl_path)

# 5. Δημιουργία μοντέλου OWL2Vec*
from mowl.models import SyntacticPlusW2VModel

model = SyntacticPlusW2VModel(dataset)

# 6. Ορισμός παραμέτρων Word2Vec
model.set_w2v_model(
    vector_size=100,  # Διάσταση embeddings
    window=5,         # Μέγεθος παραθύρου
    min_count=1,      # Αγνοεί classes/properties με λιγότερες από 1 εμφανίσεις
    workers=4         # Παράλληλη επεξεργασία
)

# 7. Δημιουργία corpus (walks) και εκπαίδευση
model.generate_corpus(save=True, with_annotations=True)
model.train(epochs=10)

# 8. Αποθήκευση μοντέλου
model.w2v_model.save("human_ontology_embeddings.w2v")

# 9. Φόρτωση embeddings
pretrained_model = SyntacticPlusW2VModel(dataset)
pretrained_model.from_pretrained("human_ontology_embeddings.w2v")

# 10. Πρόσβαση στα embeddings
class_embeddings = pretrained_model.class_embeddings
property_embeddings = pretrained_model.object_property_embeddings



import numpy as np
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
from mowl.datasets import PathDataset

# 1. Φόρτωση των embeddings από το pretrained μοντέλο
class_embeddings = pretrained_model.class_embeddings  # Λεξικό: {class_iri: embedding_vector}
property_embeddings = pretrained_model.object_property_embeddings  # Λεξικό: {property_iri: embedding_vector}

# 2. Επιλογή 10 τυχαίων κλάσεων για οπτικοποίηση
selected_classes = list(class_embeddings.keys())[:10]
selected_embeddings = np.array([class_embeddings[cls] for cls in selected_classes])

# 3. Εφαρμογή PCA για μείωση σε 2D
pca = PCA(n_components=2)
reduced_embeddings = pca.fit_transform(selected_embeddings)

# 4. Δημιουργία γραφήματος
plt.figure(figsize=(12, 8))
plt.scatter(reduced_embeddings[:, 0], reduced_embeddings[:, 1], color='blue', alpha=0.7)

# 5. Προσθήκη labels (μόνο το localname της κλάσης, όχι ολόκληρο το IRI)
for i, cls in enumerate(selected_classes):
    label = cls.split("/")[-1]  # Παίρνουμε το τελευταίο μέρος του IRI (π.χ., "Human" από "http://.../Human")
    plt.text(reduced_embeddings[i, 0], reduced_embeddings[i, 1], label, fontsize=9)

plt.title("2D Projection of Class Embeddings (PCA)", fontsize=14)
plt.xlabel("PCA Component 1", fontsize=12)
plt.ylabel("PCA Component 2", fontsize=12)
plt.grid(alpha=0.2)
plt.show()